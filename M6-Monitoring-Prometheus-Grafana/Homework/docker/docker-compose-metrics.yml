version: "3.4"

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus-data:

services:

  prometheus:
    image: prom/prometheus:v2.42.0
    container_name: prometheus
    volumes:
      - ${DIR_CONFIG}/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    restart: unless-stopped
    ports:
      - 9090:9090
    networks:
      - monitoring
    labels:
      - "org.label-schema.group=monitoring"

  nodeexporter:
    image: prom/node-exporter:v1.5.0
    container_name: ${HOSTNAME:-unknown}-nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
    restart: unless-stopped
    ports:
      - 9100:9100
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.1
    container_name: ${HOSTNAME:-unknown}-cadvisor
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    restart: unless-stopped
    command:
      - '--housekeeping_interval=15s'
      - '--docker_only=true'
      - '--store_container_labels=false'
      - '--whitelisted_container_labels=org.label-schema.group,com.docker.compose.project,com.docker.compose.service'
    ports:
      - 8080:8080
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - ${DIR_CONFIG}/grafana/data:/var/lib/grafana
      - ${DIR_CONFIG}/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ${DIR_CONFIG}/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GID=${PGID}
      - UID=${PUID}
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - 80:3000
    networks:
      - monitoring
    labels:
      - "org.label-schema.group=monitoring"

  worker:
    image: shekeriev/goprom
    container_name: ${HOSTNAME:-unknown}-worker
    ports:
      - 8081:8080