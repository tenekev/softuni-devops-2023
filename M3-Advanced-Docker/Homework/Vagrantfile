Vagrant.configure("2") do |config|

    config.vm.define "docker1" do |docker1|
        docker1.vm.box="shekeriev/debian-11"
        
        docker1.vm.hostname = "docker1.do1.lab"
        docker1.vm.network "private_network", ip: "192.168.99.101"
        
        docker1.vm.provision "shell", path: "docker-setup.sh"
        docker1.vm.provision "shell", path: "other-steps.sh"
        # /bin/bash swarm-init.sh <self_ip>
        docker1.vm.provision "shell", path: "swarm-init.sh", args: "192.168.99.101"

        docker1.vm.provider :virtualbox do |vb|
            vb.customize ["modifyvm", :id, "--memory", "1536"]
        end

    end

    config.vm.define "docker2" do |docker2|
        docker2.vm.box="shekeriev/debian-11"
        
        docker2.vm.hostname = "docker2.do1.lab"
        docker2.vm.network "private_network", ip: "192.168.99.102"
        
        docker2.vm.provision "shell", path: "docker-setup.sh"
        docker2.vm.provision "shell", path: "other-steps.sh"
        # /bin/bash swarm-join.sh <self_ip> <manager_ip>
        docker2.vm.provision "shell", path: "swarm-join.sh", args: "192.168.99.102 192.168.99.101"

        docker2.vm.provider :virtualbox do |vb|
            vb.customize ["modifyvm", :id, "--memory", "1536"]
        end
    end
	
    config.vm.define "docker3" do |docker3|
        docker3.vm.box="shekeriev/debian-11"
        
        docker3.vm.hostname = "docker3.do1.lab"
        docker3.vm.network "private_network", ip: "192.168.99.103"
        
        docker3.vm.provision "shell", path: "docker-setup.sh"
        docker3.vm.provision "shell", path: "other-steps.sh"
        # /bin/bash swarm-join.sh <self_ip> <manager_ip>
        docker3.vm.provision "shell", path: "swarm-join.sh", args: "192.168.99.103 192.168.99.101"

        docker3.vm.provider :virtualbox do |vb|
            vb.customize ["modifyvm", :id, "--memory", "1536"]
        end

        docker3.trigger.after :up do |trigger|
            trigger.run = {"inline": "vagrant ssh docker1 -c '/vagrant/stack-deploy.sh'"}
        end

    end

  end
  